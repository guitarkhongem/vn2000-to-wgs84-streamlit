import streamlit as st
import pandas as pd
import math
import re
import folium
from streamlit_folium import st_folium
from functions import vn2000_to_wgs84_baibao
import analytics

# Set page config
st.set_page_config(page_title="VN2000 ‚áÑ WGS84", layout="wide")

conn, c = analytics.init_db()
analytics.log_visit(c, conn)

# Giao di·ªán
col1, col2 = st.columns([1,5])
with col1:
    st.image("logo.jpg", width=80)
with col2:
    st.title("VN2000 ‚áÑ WGS84 Converter")
    st.markdown("### B·∫§T ƒê·ªòNG S·∫¢N HUY·ªÜN H∆Ø·ªöNG H√ìA")

def parse_coordinates(text):
    tokens = re.split(r'\s+', text.strip())
    coords = []
    i = 0
    while i < len(tokens):
        t0 = tokens[i]
        # N·∫øu ch·ª©a ch·ªØ ho·∫∑c l√† s·ªë d·∫°ng E00552071 th√¨ t√°ch
        if re.match(r'^[A-Za-z]+(\d+)$', t0):
            number = re.findall(r'\d+', t0)[0]
            coords.append(int(number))
            i += 1
            continue
        try:
            val = float(t0.replace(",", "."))
            coords.append(val)
            i += 1
        except:
            i += 1

    result = []
    i = 0
    while i + 1 < len(coords):
        x = coords[i]
        y = coords[i+1]
        h = coords[i+2] if i+2 < len(coords) else 0
        if 1e6 < x < 2e6 and 330000 < y < 670000 and -1000 < h < 3200:
            result.append((x, y, h))
        i += 3
    return result

st.subheader("üî¢ Nh·∫≠p t·ªça ƒë·ªô (space, tab ho·∫∑c enter):")
text_input = st.text_area("", height=250)
if st.button("üõ∞Ô∏è Chuy·ªÉn ƒë·ªïi"):
    parsed = parse_coordinates(text_input)
    if parsed:
        df = pd.DataFrame([vn2000_to_wgs84_baibao(x, y, h, 106.25) for x, y, h in parsed],
                          columns=["Vƒ© ƒë·ªô (Lat)", "Kinh ƒë·ªô (Lon)"])
        st.success("üéØ K·∫øt qu·∫£:")
        st.dataframe(df)

        # Map
        m = folium.Map(
            location=[df["Vƒ© ƒë·ªô (Lat)"].mean(), df["Kinh ƒë·ªô (Lon)"].mean()],
            zoom_start=14,
            tiles="https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",
            attr="Esri.WorldImagery"
        )
        for _, row in df.iterrows():
            folium.CircleMarker(location=(row["Vƒ© ƒë·ªô (Lat)"], row["Kinh ƒë·ªô (Lon)"]),
                                radius=3, color="red", fill=True, fill_opacity=0.7).add_to(m)
        st_folium(m, width=900, height=600)
    else:
        st.warning("‚ö†Ô∏è Kh√¥ng c√≥ d·ªØ li·ªáu h·ª£p l·ªá!")

# Sidebar
visits, likes = analytics.get_stats(c)
st.sidebar.markdown(f"üëÅÔ∏è L∆∞·ª£t xem: **{visits}**")
st.sidebar.markdown(f"‚ù§Ô∏è L∆∞·ª£t th√≠ch: **{likes}**")
if st.sidebar.button("üëç Th√≠ch ·ª©ng d·ª•ng"):
    analytics.increment_like(c, conn)
    st.experimental_rerun()

st.markdown("---")
st.markdown("T√°c gi·∫£: **Tr·∫ßn Tr∆∞·ªùng Sinh** | üìû 0917.750.555")


# Footer
st.markdown("---")
st.markdown(
    "üìå T√°c gi·∫£: Tr·∫ßn Tr∆∞·ªùng Sinh  \n"
    "üìû S·ªë ƒëi·ªán tho·∫°i: 0917.750.555"
)
st.markdown(
    "üîç **Ngu·ªìn c√¥ng th·ª©c**: B√†i b√°o khoa h·ªçc: **C√îNG T√ÅC T√çNH CHUY·ªÇN T·ªåA ƒê·ªò TRONG C√îNG NGH·ªÜ M√ÅY BAY KH√îNG NG∆Ø·ªúI L√ÅI C√ì ƒê·ªäNH V·ªä T√ÇM CH·ª§P CH√çNH X√ÅC**  \n"
    "T√°c gi·∫£: Tr·∫ßn Trung Anh¬π, Qu√°ch M·∫°nh Tu·∫•n¬≤  \n"
    "¬π Tr∆∞·ªùng ƒê·∫°i h·ªçc M·ªè - ƒê·ªãa ch·∫•t  \n"
    "¬≤ C√¥ng ty CP X√¢y d·ª±ng v√† Th∆∞∆°ng m·∫°i QT Mi·ªÅn B·∫Øc  \n"
    "_H·ªôi ngh·ªã Khoa h·ªçc Qu·ªëc gia V·ªÅ C√¥ng ngh·ªá ƒê·ªãa kh√¥ng gian, 2021_"
)
